// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    [Migration("20250710231628_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_date")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("director");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("genre");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.ToTable("movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 7, 10, 23, 16, 28, 427, DateTimeKind.Utc).AddTicks(4603),
                            Description = "Продолжение эпической саги о пустынной планете Арракис.",
                            Director = "Дени Вильнёв",
                            Genre = "Фантастика",
                            Title = "Дюна: Часть вторая"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 7, 10, 23, 16, 28, 427, DateTimeKind.Utc).AddTicks(4605),
                            Description = "Продолжение приключений По и его друзей.",
                            Director = "Майк Митчелл",
                            Genre = "Мультфильм",
                            Title = "Кунг-фу Панда 4"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 7, 10, 23, 16, 28, 427, DateTimeKind.Utc).AddTicks(4607),
                            Description = "Приквел к культовой франшизе о постапокалиптическом мире.",
                            Director = "Джордж Миллер",
                            Genre = "Боевик",
                            Title = "Безумный Макс: Фуриоса"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 7, 10, 23, 16, 28, 427, DateTimeKind.Utc).AddTicks(4609),
                            Description = "Эпическая история о космическом путешествии для спасения человечества.",
                            Director = "Кристофер Нолан",
                            Genre = "Научная фантастика",
                            Title = "Интерстеллар"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 7, 10, 23, 16, 28, 427, DateTimeKind.Utc).AddTicks(4610),
                            Description = "История любви на фоне трагического крушения легендарного лайнера.",
                            Director = "Джеймс Кэмерон",
                            Genre = "Драма",
                            Title = "Титаник"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("HallNumber")
                        .HasColumnType("integer")
                        .HasColumnName("hall_number");

                    b.Property<int>("MovieId")
                        .HasColumnType("integer")
                        .HasColumnName("movie_id");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("price");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval")
                        .HasColumnName("start_time");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallNumber = 1,
                            MovieId = 1,
                            Price = 500m,
                            StartTime = new TimeSpan(0, 12, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            HallNumber = 1,
                            MovieId = 1,
                            Price = 500m,
                            StartTime = new TimeSpan(0, 15, 30, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            HallNumber = 1,
                            MovieId = 1,
                            Price = 600m,
                            StartTime = new TimeSpan(0, 19, 0, 0, 0)
                        },
                        new
                        {
                            Id = 4,
                            HallNumber = 2,
                            MovieId = 2,
                            Price = 400m,
                            StartTime = new TimeSpan(0, 10, 0, 0, 0)
                        },
                        new
                        {
                            Id = 5,
                            HallNumber = 2,
                            MovieId = 2,
                            Price = 400m,
                            StartTime = new TimeSpan(0, 13, 0, 0, 0)
                        },
                        new
                        {
                            Id = 6,
                            HallNumber = 2,
                            MovieId = 2,
                            Price = 450m,
                            StartTime = new TimeSpan(0, 17, 0, 0, 0)
                        },
                        new
                        {
                            Id = 7,
                            HallNumber = 3,
                            MovieId = 3,
                            Price = 550m,
                            StartTime = new TimeSpan(0, 14, 0, 0, 0)
                        },
                        new
                        {
                            Id = 8,
                            HallNumber = 3,
                            MovieId = 3,
                            Price = 550m,
                            StartTime = new TimeSpan(0, 18, 30, 0, 0)
                        },
                        new
                        {
                            Id = 9,
                            HallNumber = 3,
                            MovieId = 3,
                            Price = 600m,
                            StartTime = new TimeSpan(0, 21, 0, 0, 0)
                        },
                        new
                        {
                            Id = 10,
                            HallNumber = 1,
                            MovieId = 4,
                            Price = 500m,
                            StartTime = new TimeSpan(0, 11, 0, 0, 0)
                        },
                        new
                        {
                            Id = 11,
                            HallNumber = 1,
                            MovieId = 4,
                            Price = 500m,
                            StartTime = new TimeSpan(0, 16, 0, 0, 0)
                        },
                        new
                        {
                            Id = 12,
                            HallNumber = 1,
                            MovieId = 4,
                            Price = 600m,
                            StartTime = new TimeSpan(0, 20, 30, 0, 0)
                        },
                        new
                        {
                            Id = 13,
                            HallNumber = 2,
                            MovieId = 5,
                            Price = 450m,
                            StartTime = new TimeSpan(0, 13, 30, 0, 0)
                        },
                        new
                        {
                            Id = 14,
                            HallNumber = 2,
                            MovieId = 5,
                            Price = 450m,
                            StartTime = new TimeSpan(0, 17, 30, 0, 0)
                        },
                        new
                        {
                            Id = 15,
                            HallNumber = 2,
                            MovieId = 5,
                            Price = 500m,
                            StartTime = new TimeSpan(0, 21, 30, 0, 0)
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Session", b =>
                {
                    b.HasOne("WebApplication1.Models.Movie", "Movie")
                        .WithMany("Sessions")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("WebApplication1.Models.Movie", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
